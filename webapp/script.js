// https://viscously-unmeliorated-bibi.ngrok-free.dev

document.addEventListener('DOMContentLoaded', function() {
    const tg = window.Telegram.WebApp;
    tg.expand();

    const loader = document.getElementById('loader');
    const profileCard = document.getElementById('profile-card');
    const createPrompt = document.getElementById('create-prompt');
    const createButton = document.getElementById('create-button');
    const creationFormDiv = document.getElementById('creation-form');
    const form = document.getElementById('form');

    const GET_PROFILE_URL = 'https://viscously-unmeliorated-bibi.ngrok-free.dev/get_profile';    // üëà –ù–ï –ó–ê–ë–£–î–¨ –í–°–¢–ê–í–ò–¢–ò –°–í–û–Æ NGROK –ê–î–†–ï–°–£
    const CREATE_PROFILE_URL = 'https://viscously-unmeliorated-bibi.ngrok-free.dev/create_profile'; // üëà –Ü –°–Æ–î–ò –¢–ï–ñ

    function showProfile(data) {
        document.getElementById('user-photo').src = data.photo_url;
        document.getElementById('user-name').textContent = data.name;
        document.getElementById('user-age').textContent = `–í—ñ–∫: ${data.age}`;
        document.getElementById('user-bio').textContent = data.bio;
        loader.classList.add('hidden');
        profileCard.classList.remove('hidden');
    }

    function showCreationPrompt() {
        loader.classList.add('hidden');
        profileCard.classList.add('hidden');
        createPrompt.classList.remove('hidden');
    }

    // 1. –ù–∞–º–∞–≥–∞—î–º–æ—Å—å –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–Ω–∫–µ—Ç—É
    fetch(GET_PROFILE_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ initData: tg.initData })
    })
    .then(response => {
        // üëà –û–°–¨ –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å
        if (response.status === 404) {
            // –Ø–∫—â–æ –∞–Ω–∫–µ—Ç–∏ –Ω–µ–º–∞—î, –ø–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
            showCreationPrompt();
            // –Ü –∑—É–ø–∏–Ω—è—î–º–æ –ø–æ–¥–∞–ª—å—à—É –æ–±—Ä–æ–±–∫—É, –∫–∏–Ω—É–≤—à–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–æ–≤–∞–Ω—É –ø–æ–º–∏–ª–∫—É
            throw new Error('Profile not found, showing creation form.');
        }
        if (!response.ok) {
            // –î–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –ø–æ–º–∏–ª–æ–∫
            throw new Error('Network response was not ok.');
        }
        // –¢—ñ–ª—å–∫–∏ —è–∫—â–æ –≤—Å–µ –¥–æ–±—Ä–µ (—Å—Ç–∞—Ç—É—Å 200), –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É JSON
        return response.json();
    })
    .then(data => {
        // –¶–µ–π –±–ª–æ–∫ —Ç–µ–ø–µ—Ä –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –¥–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        showProfile(data);
    })
    .catch(error => {
        // –õ–æ–≤–∏–º–æ –ø–æ–º–∏–ª–∫–∏. –Ø–∫—â–æ —Ü–µ –Ω–∞—à–∞ "–∫–æ–Ω—Ç—Ä–æ–ª—å–æ–≤–∞–Ω–∞" –ø–æ–º–∏–ª–∫–∞ - –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ.
        if (error.message === 'Profile not found, showing creation form.') {
            console.log('Profile not found, form is displayed.');
        } else {
            // –î–ª—è —Ä–µ–∞–ª—å–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫ –º–µ—Ä–µ–∂—ñ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            console.error('Error fetching profile:', error);
            loader.textContent = '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.';
        }
    });

    // 2. –°–ª—É—Ö–∞—î–º–æ –∫–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å" (–∫–æ–¥ –±–µ–∑ –∑–º—ñ–Ω)
    createButton.addEventListener('click', () => {
        createPrompt.classList.add('hidden');
        creationFormDiv.classList.remove('hidden');
    });

    // 3. –°–ª—É—Ö–∞—î–º–æ –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º–∏ (–∫–æ–¥ –±–µ–∑ –∑–º—ñ–Ω)
    form.addEventListener('submit', function(event) {
        event.preventDefault();

        const formData = new FormData();
        formData.append('initData', tg.initData);
        formData.append('name', document.getElementById('name-input').value);
        formData.append('age', document.getElementById('age-input').value);
        formData.append('bio', document.getElementById('bio-input').value);
        formData.append('photo', document.getElementById('photo-input').files[0]);

        tg.MainButton.showProgress();

        fetch(CREATE_PROFILE_URL, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            tg.MainButton.hideProgress();
            if (data.success) {
                tg.showAlert('–¢–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!', () => {
                    window.location.reload();
                });
            } else {
                tg.showAlert(data.message || '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é.');
            }
        })
        .catch(error => {
            tg.MainButton.hideProgress();
            console.error('Error creating profile:', error);
            tg.showAlert('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ.');
        });
    });
});