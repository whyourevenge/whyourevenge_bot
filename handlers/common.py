# handlers/common.py

from aiogram import Router, Bot, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, BotCommand, CallbackQuery  # üëà –î–æ–¥–∞–ª–∏ CallbackQuery
from aiogram.fsm.context import FSMContext  # üëà –î–æ–¥–∞–ª–∏ FSMContext
import aiosqlite

from handlers.profile_form import ProfileForm  # üëà –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–∞—à FSM
from keyboards.inline import get_edit_profile_keyboard  # üëà –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–∞—à—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É

common_router = Router()


async def set_bot_commands(bot: Bot):
    commands = [
        BotCommand(command="start", description="üèÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞"),
        BotCommand(command="create_profile", description="üìù –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –∞–Ω–∫–µ—Ç—É"),
        BotCommand(command="edit_profile", description="‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É"),  # üëà –ù–û–í–ê –ö–û–ú–ê–ù–î–ê
        BotCommand(command="my_profile", description="üë§ –ü–æ–¥–∏–≤–∏—Ç–∏—Å—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É"),
        BotCommand(command="check_profile", description="üëÄ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–Ω–∫–µ—Ç—É —ñ–Ω—à–æ–≥–æ (—á–µ—Ä–µ–∑ reply)"),
        BotCommand(command="delete_profile", description="üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É")
    ]
    await bot.set_my_commands(commands)


# ... (–∫–æ–¥ –¥–ª—è /start, /my_profile, /check_profile, /delete_profile –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω) ...
@common_router.message(CommandStart())
async def cmd_start(message: Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–Ω–∫–µ—Ç. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–æ–º–∞–Ω–¥—É /create_profile, —â–æ–± –ø–æ—á–∞—Ç–∏.")


@common_router.message(Command("my_profile"))
async def show_my_profile(message: Message, db: aiosqlite.Connection, bot: Bot):
    user_id = message.from_user.id
    async with db.execute("SELECT name, age, bio, photo_id FROM profiles WHERE user_id = ?", (user_id,)) as cursor:
        profile_data = await cursor.fetchone()
    if profile_data:
        name, age, bio, photo_id = profile_data
        caption = f"<b>–Ü–º'—è:</b> {name}\n<b>–í—ñ–∫:</b> {age}\n<b>–ü—Ä–æ —Å–µ–±–µ:</b> {bio}"
        await bot.send_photo(chat_id=message.chat.id, photo=photo_id, caption=caption, parse_mode="HTML")
    else:
        await message.reply("–£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î –∞–Ω–∫–µ—Ç–∏. –°—Ç–≤–æ—Ä–∏ —ó—ó –∫–æ–º–∞–Ω–¥–æ—é /create_profile (—É –≥—Ä—É–ø—ñ).")


# üëà –ù–û–í–ï: –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
@common_router.message(Command("edit_profile"))
async def edit_profile(message: Message, db: aiosqlite.Connection, bot: Bot):
    user_id = message.from_user.id
    async with db.execute("SELECT name, age, bio, photo_id FROM profiles WHERE user_id = ?", (user_id,)) as cursor:
        profile_data = await cursor.fetchone()

    if profile_data:
        name, age, bio, photo_id = profile_data
        caption = f"–û—Å—å —Ç–≤–æ—è –ø–æ—Ç–æ—á–Ω–∞ –∞–Ω–∫–µ—Ç–∞. –©–æ —Ö–æ—á–µ—à –∑–º—ñ–Ω–∏—Ç–∏?"
        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ñ–æ—Ç–æ –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
        await bot.send_photo(
            chat_id=message.chat.id,
            photo=photo_id,
            caption=caption,
            reply_markup=get_edit_profile_keyboard()  # üëà –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞—à—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        )
    else:
        await message.reply("–£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î –∞–Ω–∫–µ—Ç–∏, —â–æ–± —ó—ó —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏. –°–ø–æ—á–∞—Ç–∫—É —Å—Ç–≤–æ—Ä–∏ —ó—ó –∫–æ–º–∞–Ω–¥–æ—é /create_profile.")


# üëà –ù–û–í–ï: –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–ª–±–µ–∫—ñ–≤ (–Ω–∞—Ç–∏—Å–∫–∞–Ω—å –Ω–∞ –∫–Ω–æ–ø–∫–∏)
@common_router.callback_query(F.data.startswith("edit_"))
async def handle_edit_callback(callback: CallbackQuery, state: FSMContext, bot: Bot):
    action = callback.data.split("_")[1]  # –û—Ç—Ä–∏–º—É—î–º–æ "name", "age" —ñ —Ç.–¥.

    # –°–ª–æ–≤–Ω–∏–∫: –¥—ñ—è -> (—Å—Ç–∞–Ω, —Ç–µ–∫—Å—Ç_–∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è)
    actions = {
        "name": (ProfileForm.editing_name, "–í–≤–µ–¥–∏ –Ω–æ–≤–µ —ñ–º'—è:"),
        "age": (ProfileForm.editing_age, "–í–≤–µ–¥–∏ –Ω–æ–≤–∏–π –≤—ñ–∫:"),
        "bio": (ProfileForm.editing_bio, "–ù–∞–ø–∏—à–∏ –Ω–æ–≤—É –±—ñ–æ–≥—Ä–∞—Ñ—ñ—é:"),
        "photo": (ProfileForm.editing_photo, "–ù–∞–¥—ñ—à–ª–∏ –Ω–æ–≤–µ —Ñ–æ—Ç–æ:")
    }

    if action in actions:
        state_to_set, text = actions[action]
        await state.set_state(state_to_set)

        # –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –≤ –û–ü, —â–æ–± –Ω–µ –∑–∞–≤–∞–∂–∞—Ç–∏ –≤ –≥—Ä—É–ø—ñ
        try:
            await bot.send_message(chat_id=callback.from_user.id, text=text)
            # –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ –∫–æ–ª–±–µ–∫, —â–æ–± –∑–Ω–∏–∫ –≥–æ–¥–∏–Ω–Ω–∏–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ
            await callback.answer("–Ø –Ω–∞–ø–∏—Å–∞–≤ —Ç–æ–±—ñ –≤ –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")
        except Exception:
            await callback.answer("–ü–æ–º–∏–ª–∫–∞! –°–ø–µ—Ä—à—É –ø–æ—á–Ω–∏ –∑—ñ –º–Ω–æ—é –¥—ñ–∞–ª–æ–≥ –≤ –û–ü.", show_alert=True)
    else:
        await callback.answer("–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è.")


@common_router.message(Command("check_profile"))
async def check_profile(message: Message, db: aiosqlite.Connection, bot: Bot):
    if message.chat.type not in ('group', 'supergroup'):
        await message.reply("–¶—é –∫–æ–º–∞–Ω–¥—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —É –≥—Ä—É–ø—ñ!")
        return
    if not message.reply_to_message:
        await message.reply("–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü—é –∫–æ–º–∞–Ω–¥—É —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.")
        return
    user_id = message.reply_to_message.from_user.id
    username = message.reply_to_message.from_user.username or message.reply_to_message.from_user.first_name
    async with db.execute("SELECT name, age, bio, photo_id FROM profiles WHERE user_id = ?", (user_id,)) as cursor:
        profile_data = await cursor.fetchone()
    if profile_data:
        name, age, bio, photo_id = profile_data
        caption = f"–ê–Ω–∫–µ—Ç–∞ @{username}:\n<b>–Ü–º'—è:</b> {name}\n<b>–í—ñ–∫:</b> {age}\n<b>–ü—Ä–æ —Å–µ–±–µ:</b> {bio}"
        await bot.send_photo(chat_id=message.chat.id, photo=photo_id, caption=caption, parse_mode="HTML")
    else:
        await message.reply(f"–£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ @{username} –ø–æ–∫–∏ –Ω–µ–º–∞—î –∞–Ω–∫–µ—Ç–∏.")


@common_router.message(Command("delete_profile"))
async def delete_profile(message: Message, db: aiosqlite.Connection):
    user_id = message.from_user.id
    async with db.execute("SELECT 1 FROM profiles WHERE user_id = ?", (user_id,)) as cursor:
        exists = await cursor.fetchone()
    if exists:
        await db.execute("DELETE FROM profiles WHERE user_id = ?", (user_id,))
        await db.commit()
        await message.reply("–¢–≤–æ—é –∞–Ω–∫–µ—Ç—É –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.")
    else:
        await message.reply("–£ —Ç–µ–±–µ —ñ —Ç–∞–∫ –Ω–µ–º–∞—î –∞–Ω–∫–µ—Ç–∏.")